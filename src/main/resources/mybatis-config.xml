<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--设置类型别名-->
    <typeAliases>
        <!--
            typeAlias：设置某个类型的别名
            属性：
                type：设置需要设置别名的类型
                alias：设置某个类型的别名，若不设置该属性，那么该类型拥有默认的别名，即类名且不区分大小写
        -->
        <!--<typeAlias type="bean.Customer"></typeAlias>-->
        <!--以包为单位，将包下所有的类型设置默认的类型别名，即类名且不区分大小写-->
        <package name="bean"/>
    </typeAliases>

    <!--设置连接数据库的环境
    id：表示连接数据库的唯一标识，不能重复
    transactionManager: 设置事务管理方式
    属性:
        type = "JDBC/MANAGED"
        JDBC:表示当前的环境中，执行SQL时，使用的是JDBC中原声的事务管理方式。事务提交或回滚
        MANAGED:被管理， 例如Spring
    dataSource: 设置数据源
        type:是指数据源的类型
        POOLED: 使用数据库连接池缓存数据库连接
        UNPOOLED: 不实用数据库连接池
        数据库连接池负责分配、管理和释放数据库连接，
        它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；
        释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。
        这项技术能明显提高对数据库操作的性能。


    -->
    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/JDBC_Learn"/>
                <property name="username" value="root"/>
                <property name="password" value="bhfz1226"/>
            </dataSource>
        </environment>
    </environments>
    <!--引入映射文件-->
    <mappers>
        <!--<mapper resource="mappers/CustomerMapper.xml"/>-->
        <package name="mapper"/>
    </mappers>

</configuration>